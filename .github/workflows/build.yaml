name: "Build ðŸ§±"
on:
  workflow_call:
    inputs:
      bundle_upload:
        type: boolean
        default: true
        required: false
      repo_upload:
        type: boolean
        default: false
        required: false
      pages_deploy:
        type: boolean
        default: false
        required: false
      repo_deploy:
        type: boolean
        default: false
        required: false

jobs:
  build:
    name: "Flatpak ðŸ“¦"
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:kde-6.9
      options: --privileged
    strategy:
      matrix:
        variant:
          - arch: x86_64
            runner: ubuntu-24.04
          - arch: aarch64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.variant.runner }}
    steps:
    - name: "Repo checkout"
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: "Clone Mixxx repository"
      run: |
        git clone --single-branch --branch main https://github.com/mixxxdj/mixxx.git

    - name: "Update MetaInfo metadata"
      run: |
        python3 scripts/update_metainfo.py

    - name: "Validate metadata"
      run: |
        flatpak-builder-lint --exceptions \
          --user-exceptions exceptions.json appstream org.mixxx.Mixxx.Devel.metainfo.xml

    - name: "Validate manifest"
      run: |
        flatpak-builder-lint --exceptions \
          --user-exceptions exceptions.json manifest org.mixxx.Mixxx.Devel.json

    - name: "Build Flatpak"
      uses: flatpak/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: Mixxx-Devel_${{ matrix.variant.arch }}.flatpak
        manifest-path: org.mixxx.Mixxx.Devel.json
        cache-key: flatpak-builder-${{ matrix.variant.arch }}-${{ github.sha }}
        arch: ${{ matrix.variant.arch }}
        upload-artifact: false

    - name: "Validate repository"
      run: flatpak-builder-lint --exceptions --user-exceptions exceptions.json repo repo

    - name: "Create debug bundle"
      run: |
        echo "Creating a debug extension bundle..."
        /app/bin/flatpak build-bundle repo \
          --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo \
          --arch=${{ matrix.variant.arch }} \
          --runtime Mixxx-Devel_${{ matrix.variant.arch }}.Debug.flatpak org.mixxx.Mixxx.Devel.Debug

    - name: "Prepare bundle directory"
      if: inputs.bundle_upload
      run: |
        mkdir -p bundle
        mv Mixxx-Devel_${{ matrix.variant.arch }}.flatpak bundle
        mv Mixxx-Devel_${{ matrix.variant.arch }}.Debug.flatpak bundle

    - name: "Upload bundles"
      uses: actions/Upload-artifact@v4
      if: inputs.bundle_upload
      with:
        name: bundle_${{ matrix.variant.arch }}
        path: bundle

    - name: "Upload repo"
      uses: actions/Upload-artifact@v4
      if: inputs.repo_upload
      with:
        name: repo_${{ matrix.variant.arch }}
        path: repo

  repo:
    name: "Repository ðŸ›’"
    runs-on: ubuntu-latest
    needs: build
    if: inputs.repo_upload && inputs.repo_deploy
    steps:
      - name: "Download repositories"
        uses: actions/download-artifact@v4
        with:
          pattern: repo_*
      - name: "Deploy repositories"
        run: |
          echo "Placeholder for repository deploy"

  pages:
    name: "Pages ðŸ“–"
    runs-on: ubuntu-latest
    needs: build
    if: inputs.bundle_upload && inputs.pages_deploy
    steps:
      - name: "Download bundles"
        uses: actions/download-artifact@v4
        with:
          pattern: bundle_*
          path: bundle
          merge-multiple: true
      - name: "Upload bundles"
        uses: actions/upload-pages-artifact@v3
        with:
          path: bundle

  deploy:
    name: "Deploy ðŸš€"
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: pages
    if: inputs.bundle_upload && inputs.pages_deploy
    steps:
      - name: "Deploy to Pages"
        uses: actions/deploy-pages@v4
